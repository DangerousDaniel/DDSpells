[{"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/index.js":"1","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/App.js":"2","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/Spells/SpellIem.js":"3","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/Spells/SpellRows.js":"4","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/SpellForm/SpellForm.js":"5","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/Backdrop.js":"6","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/PopUpWindow.js":"7","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/DescriptionTooltip.js":"8"},{"size":179,"mtime":1653572192151,"results":"9","hashOfConfig":"10"},{"size":4477,"mtime":1654613421668,"results":"11","hashOfConfig":"10"},{"size":1976,"mtime":1654620724561,"results":"12","hashOfConfig":"10"},{"size":303,"mtime":1653574779385,"results":"13","hashOfConfig":"10"},{"size":4415,"mtime":1654606674252,"results":"14","hashOfConfig":"10"},{"size":150,"mtime":1654544309048,"results":"15","hashOfConfig":"10"},{"size":523,"mtime":1654544806989,"results":"16","hashOfConfig":"10"},{"size":943,"mtime":1654613686366,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zcznkg",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/index.js",[],["37","38"],"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/App.js",["39","40","41"],"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/Spells/SpellIem.js",["42"],"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/Spells/SpellRows.js",[],"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/SpellForm/SpellForm.js",["43"],"import './SpellForm.css'\nimport react, {useState} from 'react'\n\nconst SpellForm = (props) => {\n\n    //#region User Input for Create a Spell\n    //User Input Variables \n    const [UserInputName, setName] = useState('');\n    const [UserInputCastingTime, setCastingTime] = useState('');\n    const [UserInputRange, setRange] = useState('');\n    const [UserInputComponents, setComponents] = useState('');\n    const [UserInputDuration, setDuration] = useState('');\n    const [UserInputDescription, setDescription] = useState('');\n        \n    //Set Name from User Input\n    const UpdateNameHandler = (event) => {\n\n        setName(event.target.value)\n\n    } \n\n    //Set Casting Time from User Input\n    const UpdateCastingTimeHandler = (event) => {\n\n        //Set Data\n        setCastingTime(event.target.value)\n    } \n\n    //Set Range from User Input\n    const UpdateRangeHandler = (event) => {\n\n        //Set Data\n        setRange(event.target.value)\n    } \n\n    //Set Components from User Input\n    const UpdateComponentsHandler = (event) => {\n\n        //Set Data\n        setComponents(event.target.value)\n    } \n\n    //Set Duration from User Input\n    const UpdateDurationHandler = (event) => {\n\n        //Set data\n        setDuration(event.target.value)\n    } \n\n    //Set Description from User Input\n    const UpdateDescriptionHandler = (event) => {\n\n        setDescription(event.target.value)\n    } \n    //#endregion\n\n    //Submit the Data from User Inputs\n    const submitDataHandler = (event) => {\n        event.preventDefault()\n\n        //Create new Data\n        const SpellDate = {\n            name: UserInputName,\n            castingTime: UserInputCastingTime,\n            spell_range: UserInputRange,\n            components: UserInputComponents,\n            duration: UserInputDuration,\n            descrption: UserInputDescription\n        }\n\n        //Save Data\n        onSaveSpellData(SpellDate)\n        console.log(SpellDate)\n\n        //Clear Data \n        setName('')\n        setCastingTime('')\n        setRange('')\n        setComponents('')\n        setDuration('')\n        setDescription('')\n    }\n\n    //Save Data\n    const onSaveSpellData = (spellData) => {\n        console.log(spellData)\n        saveSpellDataHandler(spellData);\n    }\n\n    //Add Data\n    const saveSpellDataHandler = (userInputSpellData) => {\n        \n        const spellData = {\n            ...userInputSpellData,\n            id: Math.random()\n        }\n\n        props.onAddSpell(spellData)\n        console.log(spellData)\n        \n    }\n\n    //Render HTML Form\n    return (\n        <form onSubmit={submitDataHandler} >\n            <div>\n                <label>Name: </label>\n                <input type='text' value={UserInputName} onChange={UpdateNameHandler}></input>\n                <br></br>\n                <br></br>\n                <br></br>\n            </div>\n\n            <div>\n                <label>CastingTime: </label>\n                <input type='text' value={UserInputCastingTime} onChange={UpdateCastingTimeHandler}></input>\n                <br></br>\n                <br></br>\n                <br></br>\n            </div>\n\n            <div>\n                <label>Range: </label>\n                <input type='text' value={UserInputRange} onChange={UpdateRangeHandler}></input>\n                <br></br>\n                <br></br>\n                <br></br>\n            </div>\n\n            <div>\n                <label>Components: </label>\n                <input type='text' value={UserInputComponents} onChange={UpdateComponentsHandler}></input>\n                <br></br>\n                <br></br>\n                <br></br>\n            </div>\n\n            <div>\n                <label>Duration: </label>\n                <input type='text' value={UserInputDuration} onChange={UpdateDurationHandler}></input>\n                <br></br>\n                <br></br>\n                <br></br>\n            </div>\n\n            <div>\n                <label>Description: </label>\n                <br></br>\n                <input className=\"textBox\" value={UserInputDescription} type='text' onChange={UpdateDescriptionHandler}></input>\n                <br></br>\n                <br></br>\n                <br></br>\n            </div>\n\n            <div>\n                <button type=\"submit\">Create Spell</button>\n                <br></br>\n                <br></br>\n            </div>\n        </form>\n\n    );\n}\n\nexport default SpellForm","/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/Backdrop.js",[],"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/PopUpWindow.js",[],"/Users/daniel/Desktop/ My Projects/DDSpellRepo/DDSpell/src/components/DescriptionTooltip.js",["44","45","46"],"import react, {useState, useEffect, useContext} from 'react'\n\nimport './DescriptionTooltip.css'\n\nconst DescriptionToolTip = (props) => {\n\n    const [spellDesc, getDescription] = useState('')\n\n    const getDesc = async () => {\n        console.log(props.spellId)\n        var getSpellDesc = await fetch(\"https://s6u6rjds0m.execute-api.us-east-1.amazonaws.com/dev/spells/getDesc\", \n        {\n           method: 'POST',\n           body: JSON.stringify({id: props.spellId}),\n           headers: {\n             'Content-Type': 'application/json'\n           }\n        });\n        var spellDesc = await getSpellDesc.json();\n        console.log(spellDesc);\n        getDescription(spellDesc[0]);\n     }\n     useEffect(() => {\n        getDesc()\n\n     }, [])\n\n\n\n    return (\n      <div className='tooltip'>\n          <span className='tooltiptext'>{spellDesc ? spellDesc.Description : \"\"}</span>\n        </div>  \n    );\n}\n\nexport default DescriptionToolTip;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"55","line":1,"column":37,"nodeType":"53","messageId":"54","endLine":1,"endColumn":47},{"ruleId":"51","severity":1,"message":"56","line":48,"column":11,"nodeType":"53","messageId":"54","endLine":48,"endColumn":23},{"ruleId":"51","severity":1,"message":"57","line":30,"column":13,"nodeType":"53","messageId":"54","endLine":30,"endColumn":22},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"55","line":1,"column":37,"nodeType":"53","messageId":"54","endLine":1,"endColumn":47},{"ruleId":"58","severity":1,"message":"59","line":26,"column":9,"nodeType":"60","endLine":26,"endColumn":11,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'_fetchSpells' is assigned a value but never used.","'getDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDesc'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [getDesc]",{"range":"67","text":"68"},[742,744],"[getDesc]"]